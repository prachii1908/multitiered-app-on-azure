apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  labels:
    app: conexp-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: conexp-frontend
  template:
    metadata:
      labels:
        app: conexp-frontend
    spec:
      containers:
      - name: frontend
        image: cncfazure.azurecr.io/conexp/web:latest
        ports:
        - containerPort: 80  
        imagePullPolicy: Always
        env:
        - name: ConnectionStrings__DBConnectionString
          value: "Server=expensedbserver.mysql.database.azure.com; Port=3306; Database=conexpweb; Uid=expenseadmin@expensedbserver; Pwd=Azure1234!@#$; SslMode=Preferred;"
        - name: ConnectionStrings__StorageConnectionString
          value: "DefaultEndpointsProtocol=https;AccountName=expensesqueue;AccountKey=Q7pTxg44IB8rvY4UDid8VOHgcqSTdqS703zq/TWWvCKfGZP7qZ40BHGGiSmbhgrJHr6S5+IRHF7Axo6cxBE0uw==;EndpointSuffix=core.windows.net"
        - name: ConfigValues__CostCenterAPIUrl
          value: "http://backend-svc.default.svc.cluster.local:80"
      imagePullSecrets:
      - name: regcred
      nodeSelector: 
        "beta.kubernetes.io/os": linux
---
apiVersion: v1
kind: Service
metadata:
  name: conexp-frontend-svc
  labels:
    app: conexp-frontend
spec:
  selector:
    app: conexp-frontend
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: frontend-ingress-rules
  annotations:
    kubernetes.io/ingress.class: azure/application-gateway
    cert-manager.io/cluster-issuer: letsencrypt-staging
    cert-manager.io/acme-challenge-type: http01
spec:
  tls:
  - hosts:
    - aks.sarwascloud.com
    secretName: letsencrypt-tls
  rules:
  - host: aks.sarwascloud.com
    http:
      paths:
      - backend:
          serviceName: conexp-frontend-svc
          servicePort: 80
        path: /
